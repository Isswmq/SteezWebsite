spring:
  profiles:
    active: dev
  cache:
    type: redis
    cache-names: redis-cache
  config:
    import: optional:file:.env[.properties]
  thymeleaf:
    cache: false
  datasource:
    url: jdbc:postgresql://${HOST}:5432/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
      password: ${REDIS_PASSWORD}

  h2:
    console:
      enabled: true

  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        hbm2ddl:
          auto: create
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${OAUTH2_GITHUB_CLIENT_ID}
            client-secret: ${OAUTH2_GITHUB_CLIENT_SECRET}
            redirectUri: ${OAUTH2_GITHUB_REDIRECT_URI}
            scope: ${OAUTH2_GITHUB_SCOPE}
          google:
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
            redirectUri: ${OAUTH2_GOOGLE_REDIRECT_URI}
          facebook:
            client-id: ${OAUTH2_FACEBOOK_CLIENT_ID}
            client-secret: ${OAUTH2_FACEBOOK_CLIENT_SECRET}
            redirectUri: ${OAUTH2_FACEBOOK_REDIRECT_URI}
  web:
    resources:
      static-locations: /static
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    root: info
  file:
    name: store.log
    path: /